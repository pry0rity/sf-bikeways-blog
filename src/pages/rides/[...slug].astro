---
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import Layout from '../../layouts/Layout.astro';

export async function getStaticPaths() {
  const rides = await getCollection('rides');
  return rides.map((ride) => ({
    params: { slug: ride.slug },
    props: { ride }
  }));
}

type Props = {
  ride: CollectionEntry<'rides'>;
};

const { ride } = Astro.props;
const { Content } = await ride.render();
---

<Layout title={ride.data.title}>
  <article class="prose dark:prose-invert max-w-none">
    <header class="mb-8">
      <!-- <h1 class="text-3xl font-medium mb-4">{ride.data.title}</h1> -->
      <p class="text-lg text-gray-600 dark:text-gray-300 mb-4">
        {ride.data.description}
      </p>
      <div class="flex flex-wrap gap-4 text-sm text-gray-600 dark:text-gray-400">
        <time datetime={ride.data.date.toISOString()}>
          {ride.data.date.toLocaleDateString('en-US', {
            year: 'numeric',
            month: 'long',
            day: 'numeric'
          })}
        </time>
        <span>{(ride.data.distance / 1000).toFixed(1)}km</span>
        <span>{Math.round(ride.data.elevation)}m elevation</span>
        <span>{Math.round(ride.data.duration / 60)} minutes</span>
      </div>
    </header>

    <div class="prose-lg">
      <Content />
    </div>

    <div class="mt-8 p-4 bg-gray-50 dark:bg-gray-800 rounded-lg">
      <h2 class="text-lg font-medium mb-4">Route Map</h2>
      <div id="map" class="h-[400px] rounded-lg"></div>
    </div>
  </article>
</Layout>

<script is:inline define:vars={{ rideData: ride.data }}>
  // Load Mapbox GL JS
  const script = document.createElement('script');
  script.src = 'https://api.mapbox.com/mapbox-gl-js/v2.15.0/mapbox-gl.js';
  script.onload = () => {
    // Access mapboxgl from window
    const mapboxgl = window.mapboxgl;
    mapboxgl.accessToken = import.meta.env.PUBLIC_MAPBOX_TOKEN;
    const map = new mapboxgl.Map({
      container: 'map',
      style: 'mapbox://styles/mapbox/light-v11',
      center: rideData.geojson.geometry.coordinates[0],
      zoom: 12
    });

    map.on('load', () => {
      map.addSource('route', {
        type: 'geojson',
        data: rideData.geojson
      });

      map.addLayer({
        id: 'route',
        type: 'line',
        source: 'route',
        layout: {
          'line-join': 'round',
          'line-cap': 'round'
        },
        paint: {
          'line-color': '#3b82f6',
          'line-width': 4
        }
      });
    });
  };
  document.head.appendChild(script);

  // Load Mapbox GL CSS
  const link = document.createElement('link');
  link.href = 'https://api.mapbox.com/mapbox-gl-js/v2.15.0/mapbox-gl.css';
  link.rel = 'stylesheet';
  document.head.appendChild(link);
</script>

<style>
  :global(.prose) {
    max-width: 65ch;
    margin: 0 auto;
  }
  :global(.prose img) {
    border-radius: 0.5rem;
  }
  :global(.prose p) {
    margin-bottom: 1.5em;
  }
</style>