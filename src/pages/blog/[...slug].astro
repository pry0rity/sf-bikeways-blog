---
import Layout from "../../layouts/Layout.astro";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => {
    const date = new Date(post.data.date);
    const year = date.getFullYear();
    const month = String(date.getMonth() + 1).padStart(2, "0");
    return {
      params: { slug: `${year}/${month}/${post.slug}` },
      props: { post },
    };
  });
}

const { post } = Astro.props;
const { Content } = await post.render();
const date = new Date(post.data.date);
const year = date.getFullYear();
const month = date.toLocaleString("default", { month: "long" });
---

<Layout title={post.data.title}>
  <article class="space-y-8">
    <header class="space-y-4">
      <h1>{post.data.title}</h1>
      {
        post.data.description && (
          <p class="text-lg text-[var(--color-text)]/80">
            {post.data.description}
          </p>
        )
      }
      <nav class="text-sm text-[var(--color-text)]/60">
        <ol class="flex gap-2">
          <li><a href="/blog" class="link-hover">Blog</a></li>
          <li>/</li>
          <li><a href={`/blog/${year}`} class="link-hover">{year}</a></li>
          <li>/</li>
          <li>
            <a
              href={`/blog/${year}/${String(date.getMonth() + 1).padStart(2, "0")}`}
              class="link-hover">{month}</a
            >
          </li>
          <li>/</li>
          <li class="text-[var(--color-text)]">{post.data.title}</li>
        </ol>
      </nav>
      <div class="flex items-center gap-4 text-sm text-[var(--color-text)]/60">
        <time>
          {
            date.toLocaleDateString("en-US", {
              year: "numeric",
              month: "long",
              day: "numeric",
            })
          }
        </time>
        {
          post.data.tags && post.data.tags.length > 0 && (
            <span class="flex gap-2">
              {post.data.tags.map((tag) => (
                <span class="inline-block rounded-full bg-gray-100 dark:bg-gray-800 px-2 py-0.5 text-xs font-medium text-[var(--color-text)]">
                  {tag}
                </span>
              ))}
            </span>
          )
        }
        {post.data.location && <span>üìç {post.data.location}</span>}
        {post.data.weather && <span>üå§Ô∏è {post.data.weather}</span>}
      </div>
    </header>

    <div class="prose">
      <Content />
    </div>
  </article>
</Layout>

<style>
  :global(.prose) {
    max-width: 65ch;
    margin: 0 auto;
  }
  :global(.prose img) {
    border-radius: 0.5rem;
  }
  :global(.prose p) {
    margin-bottom: 1.5em;
  }
</style>
