---
import Layout from "../../layouts/Layout.astro";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";

const posts = await getCollection("blog");
console.log(
  "All posts:",
  posts.map((p) => ({ slug: p.slug, title: p.data.title }))
);

const sortedPosts = posts.sort(
  (a: CollectionEntry<"blog">, b: CollectionEntry<"blog">) =>
    new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
);
console.log(
  "Sorted posts:",
  sortedPosts.map((p) => ({ slug: p.slug, title: p.data.title }))
);

// Group posts by year and month
interface GroupedPosts {
  [year: number]: {
    [month: string]: CollectionEntry<"blog">[];
  };
}

const groupedPosts = sortedPosts.reduce<GroupedPosts>((acc, post) => {
  const date = new Date(post.data.date);
  const year = date.getFullYear();
  const month = date.toLocaleString("default", { month: "long" });

  if (!acc[year]) acc[year] = {};
  if (!acc[year][month]) acc[year][month] = [];

  acc[year][month].push(post);
  return acc;
}, {});
---

<Layout title="Blog | pryority">
  <div class="space-y-16">
    <section class="space-y-4">
      <h1>Blog</h1>
      <p class="text-[var(--color-text)]/60">
        Thoughts on cycling, technology, and life in San Francisco.
      </p>
    </section>

    <section class="space-y-16">
      {
        Object.entries(groupedPosts).map(([year, months]) => (
          <div class="space-y-12">
            <h2>{year}</h2>
            {Object.entries(months).map(([month, posts]) => (
              <div class="space-y-8">
                <div class="flex items-center gap-4">
                  <h3>{month}</h3>
                  <div class="h-px flex-1 bg-[var(--color-text)]/10" />
                </div>

                <div class="space-y-12">
                  {(posts as CollectionEntry<"blog">[]).map((post) => (
                    <article class="group">
                      <a
                        href={`/blog/${year}/${String(new Date(post.data.date).getMonth() + 1).padStart(2, "0")}/${post.slug}`}
                        class="block space-y-3"
                      >
                        <div class="space-y-1">
                          <h4 class="link-hover inline-block">
                            {post.data.title}
                          </h4>
                          <p class="text-[var(--color-text)]/60 leading-relaxed">
                            {post.data.description}
                          </p>
                        </div>

                        <div class="flex items-center gap-4 text-sm text-[var(--color-text)]/40">
                          <time>
                            {new Date(post.data.date).toLocaleDateString(
                              "en-US",
                              {
                                year: "numeric",
                                month: "long",
                                day: "numeric",
                              }
                            )}
                          </time>
                          {post.data.tags && post.data.tags.length > 0 && (
                            <span class="flex gap-2">
                              {post.data.tags.map((tag: string) => (
                                <span class="link-hover text-xs">{tag}</span>
                              ))}
                            </span>
                          )}
                        </div>
                      </a>
                    </article>
                  ))}
                </div>
              </div>
            ))}
          </div>
        ))
      }
    </section>
  </div>
</Layout>
